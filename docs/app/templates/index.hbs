<DocsHero
  @logo="ember"
  @slimHeading="Mobile"
  @strongHeading="Menu"
  @byline="A gesture enabled hamburger menu for Ember."
  @class="docs-hero"
>
  <DocsDemo @class="mobile-menu-demo" as |demo|>
    <demo.example @name="landing-demo.hbs" class="example docs-text-left docs-text-black">
      <MobileMenuWrapper @embed={{true}} @openDetectionWidth={{this.openDetectionWidth}} as |mmw|>
        <mmw.MobileMenu @maskEnabled={{this.mask}} @type={{this.type}} @shadowEnabled={{this.shadow}} @mode={{this.mode}} as |mm|>
          <div class="mobile-menu__header docs-flex docs-flex-col docs-justify-between">
            <div class="header__text">
            </div>
            <div class="header__btn docs-flex docs-justify-between">
              <div>
                Nick Schot
                <small class="docs-block">
                  info@example.com
                </small>
              </div>
            </div>
          </div>
          <div class="mobile-menu__body">
            <ul class="mobile-menu__nav">
              <li class="mobile-menu__nav-item">
                <mm.LinkTo @route="index">Home</mm.LinkTo>
              </li>
            </ul>
          </div>
        </mmw.MobileMenu>

        <mmw.Content>
          <mmw.Toggle class="docs-no-underline docs-bg-white docs-text-brand docs-text-xs docs-px-3 docs-py-2 docs-rounded docs-mt-4 docs-ml-4 docs-shadow-md hover:docs-shadow-lg docs-transition hover:docs-nudge-t docs-font-bold docs-inline-block docs-uppercase">Menu</mmw.Toggle>

          <p class="docs-m-16 docs-mb-8 docs-text-center docs-italic">
            Open your dev tools and switch to responsive mode to try the gestures!
          </p>

          {{#if this.configure}}
            <div class="mobile-menu-example-options docs-text-left">
              <div class="docs-flex docs-justify-around">
                <div>
                  <h3>Mode</h3>
                  <div class="docs-flex docs-flex-col">
                    <label><input type="radio" name="mode" {{on "click" (fn (mut this.mode) "default")}} checked="checked">default</label>
                    <label><input type="radio" name="mode" {{on "click" (fn (mut this.mode) "reveal")}}>reveal</label>
                    <label><input type="radio" name="mode" {{on "click" (fn (mut this.mode) "ios")}}>ios</label>
                    <label><input type="radio" name="mode" {{on "click" (fn (mut this.mode) "push")}}>push</label>
                    <label><input type="radio" name="mode" {{on "click" (fn (mut this.mode) "squeeze")}}>squeeze</label>
                    <label><input type="radio" name="mode" {{on "click" (fn (mut this.mode) "squeeze-reveal")}}>squeeze-reveal</label>
                  </div>
                </div>

                <div>
                  <h3>Type</h3>
                  <div class="docs-flex docs-flex-col docs-mb-3">
                    <label><input type="radio" name="side" {{on "click" (fn (mut this.type) "left")}} checked="checked">left</label>
                    <label><input type="radio" name="side" {{on "click" (fn (mut this.type) "right")}}>right</label>
                  </div>

                  <h3>Open detection width</h3>
                  <div class="docs-flex docs-flex-col docs-mb-3">
                    <label><input type="radio" name="openDetectionWidth" {{on "click" (fn (mut this.openDetectionWidth) -1)}} checked="checked">-1 (whole width)</label>
                    <label><input type="radio" name="openDetectionWidth" {{on "click" (fn (mut this.openDetectionWidth) 30)}}>30 (px, drag from edge)</label>
                  </div>

                  <h3>Other options</h3>
                  <div class="docs-flex docs-flex-col">
                    <label><input type="checkbox" {{on "click" (fn (mut this.mask) (not this.mask))}} checked="checked">mask</label>
                    <label><input type="checkbox" {{on "click" (fn (mut this.shadow) (not this.shadow))}} checked="checked">shadow</label>
                  </div>
                </div>
              </div>
            </div>
          {{else}}
            <div class="docs-m-16 docs-text-center docs-italic">
              <button
                {{on "click" (fn (mut this.configure) true)}}
                type="button"
                class="docs-no-underline docs-bg-white docs-text-brand docs-text-xs docs-px-3 docs-py-2 docs-rounded docs-mt-4 docs-ml-4 docs-shadow-md hover:docs-shadow-lg docs-transition hover:docs-nudge-t docs-font-bold docs-inline-block docs-uppercase"
              >
                Configure
              </button>
            </div>
            <div style="overflow-x: auto; height: 6rem; display: flex;">
              <div style="min-width: 90%; height: 100%; background: red;"></div>
              <div style="min-width: 90%; height: 100%; background: blue;"></div>
              <div style="min-width: 90%; height: 100%; background: green;"></div>
            </div>
          {{/if}}
        </mmw.Content>
      </MobileMenuWrapper>
    </demo.example>
  </DocsDemo>
</DocsHero>
